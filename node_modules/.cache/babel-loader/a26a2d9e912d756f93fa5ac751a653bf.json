{"ast":null,"code":"import _regeneratorRuntime from \"/home/kevin/Desktop/kevin-bagnall-eog-react-assessment/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(apiErrorReceived),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchApiError);\n\nimport { takeEvery, call } from 'redux-saga/effects';\nimport { toast } from 'react-toastify';\nimport { actions as MetricActions } from './reducer';\n\nfunction apiErrorReceived(action) {\n  return _regeneratorRuntime.wrap(function apiErrorReceived$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return call(toast.error, \"Error Received: \".concat(action.payload.error));\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}\n\nexport default function watchApiError() {\n  return _regeneratorRuntime.wrap(function watchApiError$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeEvery(MetricActions.metricApiErrorReceived.type, apiErrorReceived);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}","map":{"version":3,"sources":["/home/kevin/Desktop/kevin-bagnall-eog-react-assessment/src/Features/Graph/saga.ts"],"names":["apiErrorReceived","watchApiError","takeEvery","call","toast","actions","MetricActions","action","error","payload","metricApiErrorReceived","type"],"mappings":";;;;yBAKUA,gB;;;yBAIeC,a;;AATzB,SAASC,SAAT,EAAoBC,IAApB,QAAgC,oBAAhC;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,SAASC,OAAO,IAAIC,aAApB,QAAyD,WAAzD;;AAGA,SAAUN,gBAAV,CAA2BO,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,iBAAMJ,IAAI,CAACC,KAAK,CAACI,KAAP,4BAAiCD,MAAM,CAACE,OAAP,CAAeD,KAAhD,EAAV;;AADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIA,eAAe,SAAUP,aAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACb,iBAAMC,SAAS,CAACI,aAAa,CAACI,sBAAd,CAAqCC,IAAtC,EAA4CX,gBAA5C,CAAf;;AADa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { takeEvery, call } from 'redux-saga/effects';\nimport { toast } from 'react-toastify';\nimport { actions as MetricActions, ApiErrorAction } from './reducer';\nimport { PayloadAction } from 'redux-starter-kit';\n\nfunction* apiErrorReceived(action: PayloadAction<ApiErrorAction>) {\n  yield call(toast.error, `Error Received: ${action.payload.error}`);\n}\n\nexport default function* watchApiError() {\n  yield takeEvery(MetricActions.metricApiErrorReceived.type, apiErrorReceived);\n}\n"]},"metadata":{},"sourceType":"module"}