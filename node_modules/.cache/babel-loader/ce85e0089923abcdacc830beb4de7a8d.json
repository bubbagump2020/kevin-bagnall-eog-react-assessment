{"ast":null,"code":"import _slicedToArray from \"/home/kevin/Documents/kevin-bagnall-eog-react-assessment/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/kevin/Documents/kevin-bagnall-eog-react-assessment/src/Features/Graph/ShowMultiple.tsx\";\nimport React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\n\nvar getLastKnownMeasurement = function getLastKnownMeasurement(state) {\n  var lastMeasurement = state.metric.lastMeasurement;\n  return {\n    lastMeasurement: lastMeasurement\n  };\n};\n\nvar ShowMultiple = function ShowMultiple() {\n  var _useSelector = useSelector(getLastKnownMeasurement),\n      lastMeasurement = _useSelector.lastMeasurement; // array of user selected metrics\n\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      metricsArray = _useState2[0],\n      setMetricsArray = _useState2[1];\n\n  var addToMetricsArray = function addToMetricsArray() {\n    console.log(lastMeasurement);\n  }; // const showMultiLines = () => {\n  //     return selectedMetrics.map(metric => {\n  //         return(\n  //             <div>\n  //                 {/* <Line datakey=\"value\">\n  //                 </Line> */}\n  //             </div>\n  //         )\n  //     })\n  // console.log(lastMeasurement)\n\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, void addToMetricsArray());\n};\n\nexport default ShowMultiple;","map":{"version":3,"sources":["/home/kevin/Documents/kevin-bagnall-eog-react-assessment/src/Features/Graph/ShowMultiple.tsx"],"names":["React","useState","useSelector","getLastKnownMeasurement","state","lastMeasurement","metric","ShowMultiple","metricsArray","setMetricsArray","addToMetricsArray","console","log"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,SAASC,WAAT,QAA4B,aAA5B;;AAGA,IAAMC,uBAAuB,GAAG,SAA1BA,uBAA0B,CAACC,KAAD,EAAmB;AAC/C,MAAMC,eAAe,GAAGD,KAAK,CAACE,MAAN,CAAaD,eAArC;AACA,SAAO;AAAEA,IAAAA,eAAe,EAAfA;AAAF,GAAP;AACH,CAHD;;AAMA,IAAME,YAAY,GAAG,SAAfA,YAAe,GAAM;AAAA,qBAEKL,WAAW,CAACC,uBAAD,CAFhB;AAAA,MAEfE,eAFe,gBAEfA,eAFe,EAE2C;;;AAF3C,kBAGmBJ,QAAQ,CAAC,EAAD,CAH3B;AAAA;AAAA,MAGfO,YAHe;AAAA,MAGDC,eAHC;;AAKvB,MAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM;AAE3BC,IAAAA,OAAO,CAACC,GAAR,CAAYP,eAAZ;AAEJ,GAJD,CALuB,CAWvB;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;;;AAEA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK,KAAKK,iBAAiB,EAD3B,CADJ;AAKH,CA9BD;;AAgCA,eAAeH,YAAf","sourcesContent":["import React, { useState } from 'react'\nimport { IState } from '../../store'\nimport { useSelector } from 'react-redux'\nimport { Line } from 'recharts'\n\nconst getLastKnownMeasurement = (state: IState) => {\n    const lastMeasurement = state.metric.lastMeasurement\n    return { lastMeasurement }\n}\n\n\nconst ShowMultiple = () => {\n\n    const { lastMeasurement } = useSelector(getLastKnownMeasurement); // array of user selected metrics\n    const [ metricsArray, setMetricsArray ] = useState([] as any)\n\n    const addToMetricsArray = () => {\n       \n         console.log(lastMeasurement)\n       \n    }\n\n    // const showMultiLines = () => {\n    //     return selectedMetrics.map(metric => {\n    //         return(\n    //             <div>\n    //                 {/* <Line datakey=\"value\">\n\n    //                 </Line> */}\n    //             </div>\n    //         )\n    //     })\n    \n\n    // console.log(lastMeasurement)\n\n    return(\n        <div>\n            {void addToMetricsArray()}\n        </div>\n    )\n}\n\nexport default ShowMultiple;"]},"metadata":{},"sourceType":"module"}