{"ast":null,"code":"import _slicedToArray from \"/home/kevin/Documents/kevin-bagnall-eog-react-assessment/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/kevin/Documents/kevin-bagnall-eog-react-assessment/src/Features/Graph/ShowMultiple.tsx\";\nimport React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\n\nvar getMetric = function getMetric(state) {\n  var selectedMetrics = state.metric.selectedMetrics;\n  return {\n    selectedMetrics: selectedMetrics\n  };\n};\n\nvar ShowMultiple = function ShowMultiple() {\n  var _useSelector = useSelector(getMetric),\n      selectedMetrics = _useSelector.selectedMetrics; // array of user selected metrics\n\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      metricsArray = _useState2[0],\n      setMetricsArray = _useState2[1];\n\n  var addToMetricsArray = function addToMetricsArray() {};\n\n  var showMultiLines = function showMultiLines() {\n    return selectedMetrics.map(function (metric) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      });\n    });\n  };\n\n  console.log(selectedMetrics);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  });\n};\n\nexport default ShowMultiple;","map":{"version":3,"sources":["/home/kevin/Documents/kevin-bagnall-eog-react-assessment/src/Features/Graph/ShowMultiple.tsx"],"names":["React","useState","useSelector","getMetric","state","selectedMetrics","metric","ShowMultiple","metricsArray","setMetricsArray","addToMetricsArray","showMultiLines","map","console","log"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,SAASC,WAAT,QAA4B,aAA5B;;AAGA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,KAAD,EAAmB;AAAA,MACzBC,eADyB,GACLD,KAAK,CAACE,MADD,CACzBD,eADyB;AAEjC,SAAO;AAAEA,IAAAA,eAAe,EAAfA;AAAF,GAAP;AACH,CAHD;;AAKA,IAAME,YAAY,GAAG,SAAfA,YAAe,GAAM;AAAA,qBAEKL,WAAW,CAACC,SAAD,CAFhB;AAAA,MAEfE,eAFe,gBAEfA,eAFe,EAE6B;;;AAF7B,kBAGmBJ,QAAQ,CAAC,EAAD,CAH3B;AAAA;AAAA,MAGfO,YAHe;AAAA,MAGDC,eAHC;;AAKvB,MAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM,CAE/B,CAFD;;AAIA,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AACzB,WAAON,eAAe,CAACO,GAAhB,CAAoB,UAAAN,MAAM,EAAI;AACjC,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAOH,KARM,CAAP;AASH,GAVD;;AAYAO,EAAAA,OAAO,CAACC,GAAR,CAAYT,eAAZ;AAEA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAKH,CA5BD;;AA8BA,eAAeE,YAAf","sourcesContent":["import React, { useState } from 'react'\nimport { IState } from '../../store'\nimport { useSelector } from 'react-redux'\nimport { Line } from 'recharts'\n\nconst getMetric = (state: IState) => {\n    const { selectedMetrics } = state.metric\n    return { selectedMetrics }\n}\n\nconst ShowMultiple = () => {\n\n    const { selectedMetrics } = useSelector(getMetric); // array of user selected metrics\n    const [ metricsArray, setMetricsArray ] = useState([])\n\n    const addToMetricsArray = () => {\n\n    }\n\n    const showMultiLines = () => {\n        return selectedMetrics.map(metric => {\n            return(\n                <div>\n                    {/* <Line datakey=\"value\">\n\n                    </Line> */}\n                </div>\n            )\n        })\n    }\n\n    console.log(selectedMetrics)\n\n    return(\n        <div>\n\n        </div>\n    )\n}\n\nexport default ShowMultiple;"]},"metadata":{},"sourceType":"module"}