{"ast":null,"code":"var _jsxFileName = \"/home/kevin/Documents/kevin-bagnall-eog-react-assessment/src/Features/Graph/ToolTipContent.tsx\";\nimport React from 'react';\nimport { useSelector } from 'react-redux';\n\nvar getContent = function getContent(state) {\n  var lastMeasurement = state.metric.lastMeasurement;\n  return lastMeasurement;\n};\n\nvar handleTimeConversion = function handleTimeConversion() {};\n\nvar ToolTipContent = function ToolTipContent() {\n  var measurement = useSelector(getContent);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"\".concat(measurement.metric), \" \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }), \"\".concat(measurement.value, \" \").concat(measurement.unit));\n};\n\nexport default (function () {\n  return React.createElement(ToolTipContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  });\n});","map":{"version":3,"sources":["/home/kevin/Documents/kevin-bagnall-eog-react-assessment/src/Features/Graph/ToolTipContent.tsx"],"names":["React","useSelector","getContent","state","lastMeasurement","metric","handleTimeConversion","ToolTipContent","measurement","value","unit"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;;AASA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,KAAD,EAAmB;AAClC,MAAMC,eAAe,GAAGD,KAAK,CAACE,MAAN,CAAaD,eAArC;AACA,SAAOA,eAAP;AACH,CAHD;;AAKA,IAAME,oBAAoB,GAAG,SAAvBA,oBAAuB,GAAM,CAElC,CAFD;;AAIA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AACzB,MAAMC,WAAW,GAAGP,WAAW,CAACC,UAAD,CAA/B;AACA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACQM,WAAW,CAACH,MADpB,QAC+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAD/B,YAEQG,WAAW,CAACC,KAFpB,cAE6BD,WAAW,CAACE,IAFzC,EADJ;AAMH,CARD;;AAUA,gBAAe,YAAM;AACjB,SACI,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAGH,CAJD","sourcesContent":["import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { IState } from '../../store'\n\ntype ToolTipProps = {\n    data: {\n        \n    }\n}\n\nconst getContent = (state: IState) => {\n    const lastMeasurement = state.metric.lastMeasurement\n    return lastMeasurement\n}\n\nconst handleTimeConversion = () => {\n\n}\n\nconst ToolTipContent = () => {\n    const measurement = useSelector(getContent)\n    return(\n        <div>\n            {`${measurement.metric}` } <br></br>\n            {`${measurement.value} ${measurement.unit}` }\n        </div>\n    )\n}\n\nexport default () => {\n    return(\n        <ToolTipContent />\n    )\n}"]},"metadata":{},"sourceType":"module"}