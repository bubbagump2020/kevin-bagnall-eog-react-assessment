{"ast":null,"code":"var _jsxFileName = \"/home/kevin/Desktop/kevin-bagnall-eog-react-assessment/src/Features/Graph/Graph.tsx\";\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { LineChart } from 'recharts';\n\nvar getLastMeasurement = function getLastMeasurement(state) {\n  var lastMeasurement = state.metric.lastMeasurement;\n  return lastMeasurement;\n};\n\nvar Graph = function Graph() {\n  var lastMeasurement = useSelector(getLastMeasurement);\n  console.log(lastMeasurement);\n  return React.createElement(LineChart, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  });\n};\n\nexport default (function () {\n  return React.createElement(Graph, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  });\n});","map":{"version":3,"sources":["/home/kevin/Desktop/kevin-bagnall-eog-react-assessment/src/Features/Graph/Graph.tsx"],"names":["React","useSelector","LineChart","getLastMeasurement","state","lastMeasurement","metric","Graph","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAA2C,OAA3C;AACA,SAAsBC,WAAtB,QAAyC,aAAzC;AAEA,SAASC,SAAT,QAA0B,UAA1B;;AAKA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,KAAD,EAAmB;AAC1C,MAAMC,eAAe,GAAID,KAAK,CAACE,MAAN,CAAaD,eAAtC;AACA,SAAQA,eAAR;AACH,CAHD;;AAKA,IAAME,KAAK,GAAG,SAARA,KAAQ,GAAM;AAEhB,MAAMF,eAAe,GAAGJ,WAAW,CAACE,kBAAD,CAAnC;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAYJ,eAAZ;AACA,SACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAKH,CATD;;AAYA,gBAAe,YAAM;AACjB,SACI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAGH,CAJD","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { actions } from './reducer'\nimport { LineChart } from 'recharts'\n\nimport MetricSelection from './MetricSelection';\nimport { IState } from '../../store';\n\nconst getLastMeasurement = (state: IState) => {\n    const lastMeasurement  = state.metric.lastMeasurement\n    return  lastMeasurement \n}\n\nconst Graph = () => {\n\n    const lastMeasurement = useSelector(getLastMeasurement)\n    console.log(lastMeasurement)\n    return(\n        <LineChart>\n        \n        </LineChart>\n    )\n}\n\n\nexport default () => {\n    return(\n        <Graph />\n    )\n}"]},"metadata":{},"sourceType":"module"}