{"ast":null,"code":"import _regeneratorRuntime from \"/home/kevin/Documents/kevin-bagnall-eog-react-assessment/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(apiErrorReceived),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchApiError);\n\nfunction apiErrorReceived(action) {\n  return _regeneratorRuntime.wrap(function apiErrorReceived$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}\n\nexport default function watchApiError() {\n  return _regeneratorRuntime.wrap(function watchApiError$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}","map":{"version":3,"sources":["/home/kevin/Documents/kevin-bagnall-eog-react-assessment/src/Features/Graph/saga.ts"],"names":["apiErrorReceived","watchApiError","action"],"mappings":";;;;yBAKUA,gB;;;yBAIeC,a;;AAJzB,SAAUD,gBAAV,CAA2BE,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIA,eAAe,SAAUD,aAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { takeEvery, call } from 'redux-saga/effects';\nimport { toast } from 'react-toastify';\nimport { actions as MetricActions, ApiErrorAction } from './reducer';\nimport { PayloadAction } from 'redux-starter-kit';\n\nfunction* apiErrorReceived(action: PayloadAction<ApiErrorAction>) {\n  // yield call(toast.error, `Error Received: ${action.payload.error}`);\n}\n\nexport default function* watchApiError() {\n  // yield takeEvery(MetricActions.metricApiErrorReceived.type, apiErrorReceived);\n}\n"]},"metadata":{},"sourceType":"module"}