{"ast":null,"code":"var _jsxFileName = \"/home/kevin/Desktop/kevin-bagnall-eog-react-assessment/src/Features/Graph/Graph.tsx\";\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Card, Typography, CardContent } from '@material-ui/core';\nimport ShowChartData from './ShowChartData';\n\nvar getLastMeasurement = function getLastMeasurement(state) {\n  var lastMeasurement = state.metric.lastMeasurement;\n  return lastMeasurement;\n};\n\nvar Graph = function Graph() {\n  var lastMeasurement = useSelector(getLastMeasurement);\n\n  var renderChart = function renderChart() {\n    if (lastMeasurement.metric === \"\") {\n      return;\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, React.createElement(CardContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"h4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, lastMeasurement.metric), React.createElement(Typography, {\n        variant: \"h2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, lastMeasurement.value)), React.createElement(ShowChartData, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      })));\n    }\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, renderChart());\n};\n\nexport default (function () {\n  return React.createElement(Graph, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  });\n});","map":{"version":3,"sources":["/home/kevin/Desktop/kevin-bagnall-eog-react-assessment/src/Features/Graph/Graph.tsx"],"names":["React","useSelector","Card","Typography","CardContent","ShowChartData","getLastMeasurement","state","lastMeasurement","metric","Graph","renderChart","value"],"mappings":";AAAA,OAAOA,KAAP,MAA2C,OAA3C;AACA,SAAsBC,WAAtB,QAAyC,aAAzC;AAMA,SAASC,IAAT,EAAeC,UAAf,EAA2BC,WAA3B,QAA8C,mBAA9C;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;AAEA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,KAAD,EAAmB;AAC1C,MAAMC,eAAe,GAAID,KAAK,CAACE,MAAN,CAAaD,eAAtC;AACA,SAAQA,eAAR;AACH,CAHD;;AAMA,IAAME,KAAK,GAAG,SAARA,KAAQ,GAAM;AAEhB,MAAMF,eAAe,GAAGP,WAAW,CAACK,kBAAD,CAAnC;;AAEA,MAAMK,WAAW,GAAG,SAAdA,WAAc,GAAM;AACtB,QAAIH,eAAe,CAACC,MAAhB,KAA2B,EAA/B,EAAkC;AAC9B;AACH,KAFD,MAEO;AACH,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,UAAD;AAAY,QAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKD,eAAe,CAACC,MADrB,CADJ,EAII,oBAAC,UAAD;AAAY,QAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKD,eAAe,CAACI,KADrB,CAJJ,CADJ,EASI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATJ,CADJ,CADJ;AAeH;AACJ,GApBD;;AAsBA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKD,WAAW,EADhB,CADJ;AAKH,CA/BD;;AAkCA,gBAAe,YAAM;AACjB,SACI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAGH,CAJD","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { actions } from './reducer'\nimport { LineChart, Line } from 'recharts'\n\nimport MetricSelection from './MetricSelection';\nimport { IState } from '../../store';\nimport { Card, Typography, CardContent } from '@material-ui/core';\nimport ShowChartData from './ShowChartData';\n\nconst getLastMeasurement = (state: IState) => {\n    const lastMeasurement  = state.metric.lastMeasurement\n    return  lastMeasurement \n}\n\n\nconst Graph = () => {\n\n    const lastMeasurement = useSelector(getLastMeasurement)\n    \n    const renderChart = () => {\n        if (lastMeasurement.metric === \"\"){\n            return\n        } else {\n            return(\n                <div>\n                    <Card>\n                        <CardContent>\n                            <Typography variant=\"h4\">\n                                {lastMeasurement.metric}\n                            </Typography>\n                            <Typography variant=\"h2\">\n                                {lastMeasurement.value}\n                            </Typography>\n                        </CardContent>\n                        <ShowChartData />\n                    </Card>\n                </div>\n            )\n        }\n    }\n\n    return(\n        <div>\n            {renderChart()}\n        </div>\n    )\n}\n\n\nexport default () => {\n    return(\n        <Graph />\n    )\n}"]},"metadata":{},"sourceType":"module"}