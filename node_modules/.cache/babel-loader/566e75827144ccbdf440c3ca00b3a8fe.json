{"ast":null,"code":"import _slicedToArray from \"/home/kevin/Documents/kevin-bagnall-eog-react-assessment/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/kevin/Documents/kevin-bagnall-eog-react-assessment/src/Features/Graph/ShowChartData.tsx\";\nimport React, { useEffect } from \"react\";\nimport moment from \"moment\";\nimport { actions } from \"./reducer\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useQuery } from \"urql\";\nimport { LineChart, Line, XAxis, YAxis, ResponsiveContainer, Tooltip } from \"recharts\";\nimport { LinearProgress, Card, CardContent, Typography } from \"@material-ui/core\";\nimport { MEASUREMENTS_QUERY } from \"./Queries\";\n\nvar getLastKnownMeasurement = function getLastKnownMeasurement(state) {\n  var lastMeasurement = state.metric.lastMeasurement;\n  return {\n    lastMeasurement: lastMeasurement\n  };\n};\n\nvar getMeasurements = function getMeasurements(state) {\n  var Measurements = state.metric.Measurements;\n  return {\n    Measurements: Measurements\n  };\n};\n\nvar ShowChartData = function ShowChartData() {\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(getLastKnownMeasurement),\n      lastMeasurement = _useSelector.lastMeasurement;\n\n  var Measurements = useSelector(getMeasurements);\n  var visualData = Measurements.Measurements;\n  var timeLimit = new Date();\n  var input = {\n    metricName: lastMeasurement.metric,\n    after: lastMeasurement.at - 1800000,\n    before: timeLimit.getTime() - 10000\n  };\n\n  var _useQuery = useQuery({\n    query: MEASUREMENTS_QUERY,\n    variables: {\n      input: input\n    },\n    pause: !lastMeasurement.metric\n  }),\n      _useQuery2 = _slicedToArray(_useQuery, 1),\n      result = _useQuery2[0];\n\n  var data = result.data,\n      error = result.error;\n  useEffect(function () {\n    if (error) {\n      console.log(error);\n    }\n\n    if (!data) return;\n    var measurements = data;\n    dispatch(actions.chartMeasurements({\n      getMeasurements: measurements.getMeasurements\n    }));\n  }, [dispatch, data, error]);\n\n  var loadingData = function loadingData() {\n    if (!data) {\n      return React.createElement(LinearProgress, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      });\n    }\n  };\n\n  var tickFormatter = function tickFormatter(ticks) {\n    return moment(ticks).format(\"HH:mm\");\n  };\n\n  var renderToolTip = function renderToolTip(data) {\n    if (data.payload[0] !== undefined) {\n      var toolTipData = data.payload[0].payload;\n      var toolTime = moment(toolTipData.at).format(\"MMMM do YYYY, h:mm:ss a\");\n      return React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(CardContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        color: \"textSecondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, toolTime)), React.createElement(CardContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, toolTipData.metric), React.createElement(CardContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, \"\".concat(toolTipData.value, \" \").concat(toolTipData.unit)));\n    }\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, loadingData(), React.createElement(ResponsiveContainer, {\n    width: \"100%\",\n    height: 800,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(LineChart, {\n    margin: {\n      bottom: 20\n    },\n    data: visualData.slice(0, 99),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(Line, {\n    dataKey: \"value\",\n    type: \"monotone\",\n    animationEasing: \"ease-out\",\n    strokeWidth: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }), React.createElement(XAxis, {\n    dataKey: \"at\",\n    type: \"number\",\n    interval: \"preserveStart\",\n    tickFormatter: tickFormatter,\n    domain: [\"dataMin\", \"dataMax\"],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }), React.createElement(YAxis, {\n    dataKey: \"value\",\n    height: 10,\n    domain: [0, \"dataMax\"],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }), React.createElement(Tooltip, {\n    content: renderToolTip,\n    animationEasing: \"ease-out\",\n    isAnimationActive: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }))));\n};\n\nexport default (function () {\n  return React.createElement(ShowChartData, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  });\n});","map":{"version":3,"sources":["/home/kevin/Documents/kevin-bagnall-eog-react-assessment/src/Features/Graph/ShowChartData.tsx"],"names":["React","useEffect","moment","actions","useSelector","useDispatch","useQuery","LineChart","Line","XAxis","YAxis","ResponsiveContainer","Tooltip","LinearProgress","Card","CardContent","Typography","MEASUREMENTS_QUERY","getLastKnownMeasurement","state","lastMeasurement","metric","getMeasurements","Measurements","ShowChartData","dispatch","visualData","timeLimit","Date","input","metricName","after","at","before","getTime","query","variables","pause","result","data","error","console","log","measurements","chartMeasurements","loadingData","tickFormatter","ticks","format","renderToolTip","payload","undefined","toolTipData","toolTime","value","unit","bottom","slice"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAGA,SAASC,OAAT,QAAwB,WAAxB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,QAAT,QAAyB,MAAzB;AACA,SACEC,SADF,EAEEC,IAFF,EAGEC,KAHF,EAIEC,KAJF,EAKEC,mBALF,EAMEC,OANF,QAOO,UAPP;AAQA,SACEC,cADF,EAEEC,IAFF,EAGEC,WAHF,EAIEC,UAJF,QAKO,mBALP;AAMA,SAASC,kBAAT,QAAmC,WAAnC;;AAEA,IAAMC,uBAAuB,GAAG,SAA1BA,uBAA0B,CAACC,KAAD,EAAmB;AACjD,MAAMC,eAAe,GAAGD,KAAK,CAACE,MAAN,CAAaD,eAArC;AACA,SAAO;AAAEA,IAAAA,eAAe,EAAfA;AAAF,GAAP;AACD,CAHD;;AAKA,IAAME,eAAe,GAAG,SAAlBA,eAAkB,CAACH,KAAD,EAAmB;AACzC,MAAMI,YAAY,GAAGJ,KAAK,CAACE,MAAN,CAAaE,YAAlC;AACA,SAAO;AAAEA,IAAAA,YAAY,EAAZA;AAAF,GAAP;AACD,CAHD;;AAKA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAC1B,MAAMC,QAAQ,GAAGpB,WAAW,EAA5B;;AAD0B,qBAEED,WAAW,CAACc,uBAAD,CAFb;AAAA,MAElBE,eAFkB,gBAElBA,eAFkB;;AAI1B,MAAMG,YAAY,GAAGnB,WAAW,CAACkB,eAAD,CAAhC;AACA,MAAMI,UAAU,GAAGH,YAAY,CAACA,YAAhC;AAEA,MAAMI,SAAS,GAAG,IAAIC,IAAJ,EAAlB;AAEA,MAAMC,KAAK,GAAG;AACZC,IAAAA,UAAU,EAAEV,eAAe,CAACC,MADhB;AAEZU,IAAAA,KAAK,EAAEX,eAAe,CAACY,EAAhB,GAAqB,OAFhB;AAGZC,IAAAA,MAAM,EAAEN,SAAS,CAACO,OAAV,KAAsB;AAHlB,GAAd;;AAT0B,kBAeT5B,QAAQ,CAAC;AACxB6B,IAAAA,KAAK,EAAElB,kBADiB;AAExBmB,IAAAA,SAAS,EAAE;AACTP,MAAAA,KAAK,EAALA;AADS,KAFa;AAKxBQ,IAAAA,KAAK,EAAE,CAACjB,eAAe,CAACC;AALA,GAAD,CAfC;AAAA;AAAA,MAenBiB,MAfmB;;AAAA,MAuBlBC,IAvBkB,GAuBFD,MAvBE,CAuBlBC,IAvBkB;AAAA,MAuBZC,KAvBY,GAuBFF,MAvBE,CAuBZE,KAvBY;AAwB1BvC,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIuC,KAAJ,EAAW;AACTC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;;AACD,QAAI,CAACD,IAAL,EAAW;AACX,QAAMI,YAAY,GAAGJ,IAArB;AACAd,IAAAA,QAAQ,CACNtB,OAAO,CAACyC,iBAAR,CAA0B;AACxBtB,MAAAA,eAAe,EAAEqB,YAAY,CAACrB;AADN,KAA1B,CADM,CAAR;AAKD,GAXQ,EAWN,CAACG,QAAD,EAAWc,IAAX,EAAiBC,KAAjB,CAXM,CAAT;;AAaA,MAAMK,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxB,QAAI,CAACN,IAAL,EAAW;AACT,aAAO,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;AACF,GAJD;;AAMA,MAAMO,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAgB;AACpC,WAAO7C,MAAM,CAAC6C,KAAD,CAAN,CAAcC,MAAd,CAAqB,OAArB,CAAP;AACD,GAFD;;AAIA,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACV,IAAD,EAAe;AACnC,QAAIA,IAAI,CAACW,OAAL,CAAa,CAAb,MAAoBC,SAAxB,EAAmC;AACjC,UAAMC,WAAW,GAAGb,IAAI,CAACW,OAAL,CAAa,CAAb,EAAgBA,OAApC;AACA,UAAMG,QAAQ,GAAGnD,MAAM,CAACkD,WAAW,CAACpB,EAAb,CAAN,CAAuBgB,MAAvB,CAA8B,yBAA9B,CAAjB;AACA,aACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,UAAD;AAAY,QAAA,KAAK,EAAC,eAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAmCK,QAAnC,CADF,CADF,EAIE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAcD,WAAW,CAAC/B,MAA1B,CAJF,EAKE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACM+B,WAAW,CAACE,KADlB,cAC2BF,WAAW,CAACG,IADvC,EALF,CADF;AAWD;AACF,GAhBD;;AAkBA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGV,WAAW,EADd,EAEE,oBAAC,mBAAD;AAAqB,IAAA,KAAK,EAAC,MAA3B;AAAkC,IAAA,MAAM,EAAE,GAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAW,IAAA,MAAM,EAAE;AAAEW,MAAAA,MAAM,EAAE;AAAV,KAAnB;AAAmC,IAAA,IAAI,EAAE9B,UAAU,CAAC+B,KAAX,CAAiB,CAAjB,EAAoB,EAApB,CAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AACE,IAAA,OAAO,EAAC,OADV;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,eAAe,EAAC,UAHlB;AAIE,IAAA,WAAW,EAAE,CAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAOE,oBAAC,KAAD;AACE,IAAA,OAAO,EAAC,IADV;AAEE,IAAA,IAAI,EAAC,QAFP;AAGE,IAAA,QAAQ,EAAC,eAHX;AAIE,IAAA,aAAa,EAAEX,aAJjB;AAKE,IAAA,MAAM,EAAE,CAAC,SAAD,EAAY,SAAZ,CALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,EAcE,oBAAC,KAAD;AAAO,IAAA,OAAO,EAAC,OAAf;AAAuB,IAAA,MAAM,EAAE,EAA/B;AAAmC,IAAA,MAAM,EAAE,CAAC,CAAD,EAAI,SAAJ,CAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdF,EAeE,oBAAC,OAAD;AACE,IAAA,OAAO,EAAEG,aADX;AAEE,IAAA,eAAe,EAAC,UAFlB;AAGE,IAAA,iBAAiB,EAAE,IAHrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfF,CADF,CAFF,CADF;AA4BD,CA7FD;;AA+FA,gBAAe,YAAM;AACnB,SAAO,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD,CAFD","sourcesContent":["import React, { useEffect } from \"react\";\nimport moment from \"moment\";\n\nimport { IState } from \"../../store\";\nimport { actions } from \"./reducer\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useQuery } from \"urql\";\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  ResponsiveContainer,\n  Tooltip\n} from \"recharts\";\nimport {\n  LinearProgress,\n  Card,\n  CardContent,\n  Typography\n} from \"@material-ui/core\";\nimport { MEASUREMENTS_QUERY } from \"./Queries\";\n\nconst getLastKnownMeasurement = (state: IState) => {\n  const lastMeasurement = state.metric.lastMeasurement;\n  return { lastMeasurement };\n};\n\nconst getMeasurements = (state: IState) => {\n  const Measurements = state.metric.Measurements;\n  return { Measurements };\n};\n\nconst ShowChartData = () => {\n  const dispatch = useDispatch();\n  const { lastMeasurement } = useSelector(getLastKnownMeasurement);\n\n  const Measurements = useSelector(getMeasurements);\n  const visualData = Measurements.Measurements;\n\n  const timeLimit = new Date();\n\n  const input = {\n    metricName: lastMeasurement.metric,\n    after: lastMeasurement.at - 1800000,\n    before: timeLimit.getTime() - 10000\n  };\n\n  const [result] = useQuery({\n    query: MEASUREMENTS_QUERY,\n    variables: {\n      input\n    },\n    pause: !lastMeasurement.metric\n  });\n\n  const { data, error } = result;\n  useEffect(() => {\n    if (error) {\n      console.log(error);\n    }\n    if (!data) return;\n    const measurements = data;\n    dispatch(\n      actions.chartMeasurements({\n        getMeasurements: measurements.getMeasurements\n      })\n    );\n  }, [dispatch, data, error]);\n\n  const loadingData = () => {\n    if (!data) {\n      return <LinearProgress />;\n    }\n  };\n\n  const tickFormatter = (ticks: any) => {\n    return moment(ticks).format(\"HH:mm\");\n  };\n\n  const renderToolTip = (data: any) => {\n    if (data.payload[0] !== undefined) {\n      const toolTipData = data.payload[0].payload;\n      const toolTime = moment(toolTipData.at).format(\"MMMM do YYYY, h:mm:ss a\");\n      return (\n        <Card>\n          <CardContent>\n            <Typography color=\"textSecondary\">{toolTime}</Typography>\n          </CardContent>\n          <CardContent>{toolTipData.metric}</CardContent>\n          <CardContent>\n            {`${toolTipData.value} ${toolTipData.unit}`}\n          </CardContent>\n        </Card>\n      );\n    }\n  };\n\n  return (\n    <div>\n      {loadingData()}\n      <ResponsiveContainer width=\"100%\" height={800}>\n        <LineChart margin={{ bottom: 20 }} data={visualData.slice(0, 99)}>\n          <Line\n            dataKey=\"value\"\n            type=\"monotone\"\n            animationEasing=\"ease-out\"\n            strokeWidth={4}\n          />\n          <XAxis\n            dataKey=\"at\"\n            type=\"number\"\n            interval=\"preserveStart\"\n            tickFormatter={tickFormatter}\n            domain={[\"dataMin\", \"dataMax\"]}\n          />\n          <YAxis dataKey=\"value\" height={10} domain={[0, \"dataMax\"]} />\n          <Tooltip\n            content={renderToolTip}\n            animationEasing=\"ease-out\"\n            isAnimationActive={true}\n          />\n        </LineChart>\n      </ResponsiveContainer>\n    </div>\n  );\n};\n\nexport default () => {\n  return <ShowChartData />;\n};\n"]},"metadata":{},"sourceType":"module"}