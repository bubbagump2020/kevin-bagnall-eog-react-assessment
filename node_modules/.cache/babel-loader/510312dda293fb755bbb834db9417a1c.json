{"ast":null,"code":"var _jsxFileName = \"/home/kevin/Desktop/kevin-bagnall-eog-react-assessment/src/Features/Graph/Graph.tsx\";\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { LineChart, Line } from 'recharts';\n\nvar getLastMeasurement = function getLastMeasurement(state) {\n  var lastMeasurement = state.metric.lastMeasurement;\n  return lastMeasurement;\n};\n\nvar Graph = function Graph() {\n  var lastMeasurement = useSelector(getLastMeasurement);\n\n  var renderLinChart = function renderLinChart() {\n    return React.createElement(LineChart, {\n      width: 400,\n      height: 400,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(Line, {\n      type: \"monotone\",\n      dataKey: lastMeasurement.value,\n      stroke: \"#8884d8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }));\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  });\n};\n\nexport default (function () {\n  return React.createElement(Graph, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  });\n});","map":{"version":3,"sources":["/home/kevin/Desktop/kevin-bagnall-eog-react-assessment/src/Features/Graph/Graph.tsx"],"names":["React","useSelector","LineChart","Line","getLastMeasurement","state","lastMeasurement","metric","Graph","renderLinChart","value"],"mappings":";AAAA,OAAOA,KAAP,MAA2C,OAA3C;AACA,SAAsBC,WAAtB,QAAyC,aAAzC;AAEA,SAASC,SAAT,EAAoBC,IAApB,QAAgC,UAAhC;;AAKA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,KAAD,EAAmB;AAC1C,MAAMC,eAAe,GAAID,KAAK,CAACE,MAAN,CAAaD,eAAtC;AACA,SAAQA,eAAR;AACH,CAHD;;AAMA,IAAME,KAAK,GAAG,SAARA,KAAQ,GAAM;AAEhB,MAAMF,eAAe,GAAGL,WAAW,CAACG,kBAAD,CAAnC;;AAEA,MAAMK,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AACzB,WACI,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAE,GAAlB;AAAuB,MAAA,MAAM,EAAE,GAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,UAAX;AAAsB,MAAA,OAAO,EAAEH,eAAe,CAACI,KAA/C;AAAsD,MAAA,MAAM,EAAC,SAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAKH,GAND;;AAQA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAKH,CAjBD;;AAoBA,gBAAe,YAAM;AACjB,SACI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAGH,CAJD","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { actions } from './reducer'\nimport { LineChart, Line } from 'recharts'\n\nimport MetricSelection from './MetricSelection';\nimport { IState } from '../../store';\n\nconst getLastMeasurement = (state: IState) => {\n    const lastMeasurement  = state.metric.lastMeasurement\n    return  lastMeasurement \n}\n\n\nconst Graph = () => {\n\n    const lastMeasurement = useSelector(getLastMeasurement)\n    \n    const renderLinChart = () => {\n        return(\n            <LineChart width={400} height={400}>\n                <Line type=\"monotone\" dataKey={lastMeasurement.value} stroke=\"#8884d8\" />\n            </LineChart>\n        )\n    }\n\n    return(\n        <div>\n        \n        </div>\n    )\n}\n\n\nexport default () => {\n    return(\n        <Graph />\n    )\n}"]},"metadata":{},"sourceType":"module"}