{"ast":null,"code":"import { createClient } from \"urql\";\nexport var LAST_KNOWN_MEASUREMENT_QUERY = \"\\n    query($metricName: String!){\\n        getLastKnownMeasurement(metricName: $metricName){\\n            metric\\n            at\\n            value\\n            unit\\n        }\\n    }\\n\";\nexport var MEASUREMENTS_QUERY = \"\\n    query($input: MeasurementQuery){\\n        getMeasurements(input: $input){\\n            metric\\n            at\\n            value\\n            unit\\n        }\\n    }\\n\";\nexport var GET_METRICS_QUERY = \"\\n    query{\\n        getMetrics\\n    }\\n\";\nexport var GET_MULTIPLE_QUERY = \"\\n    query($input: [MeasurementQuery]){\\n        getMultipleMeasurements(input: $input){\\n            metric\\n            measurements\\n        }\\n    }\\n\";\nexport var CLIENT = createClient({\n  url: 'https://react.eogresources.com/graphql'\n});","map":{"version":3,"sources":["/home/kevin/Documents/kevin-bagnall-eog-react-assessment/src/Features/Graph/Queries.tsx"],"names":["createClient","LAST_KNOWN_MEASUREMENT_QUERY","MEASUREMENTS_QUERY","GET_METRICS_QUERY","GET_MULTIPLE_QUERY","CLIENT","url"],"mappings":"AAAA,SAASA,YAAT,QAA6B,MAA7B;AAEA,OAAO,IAAMC,4BAA4B,+LAAlC;AAWP,OAAO,IAAMC,kBAAkB,iLAAxB;AAWP,OAAO,IAAMC,iBAAiB,8CAAvB;AAKP,OAAO,IAAMC,kBAAkB,gKAAxB;AAUP,OAAO,IAAMC,MAAM,GAAGL,YAAY,CAAC;AAC/BM,EAAAA,GAAG,EAAE;AAD0B,CAAD,CAA3B","sourcesContent":["import { createClient } from \"urql\"\n\nexport const LAST_KNOWN_MEASUREMENT_QUERY = `\n    query($metricName: String!){\n        getLastKnownMeasurement(metricName: $metricName){\n            metric\n            at\n            value\n            unit\n        }\n    }\n`\n\nexport const MEASUREMENTS_QUERY = `\n    query($input: MeasurementQuery){\n        getMeasurements(input: $input){\n            metric\n            at\n            value\n            unit\n        }\n    }\n`\n\nexport const GET_METRICS_QUERY = `\n    query{\n        getMetrics\n    }\n`\nexport const GET_MULTIPLE_QUERY = `\n    query($input: [MeasurementQuery]){\n        getMultipleMeasurements(input: $input){\n            metric\n            measurements\n        }\n    }\n`\n\n\nexport const CLIENT = createClient({\n    url: 'https://react.eogresources.com/graphql'\n})"]},"metadata":{},"sourceType":"module"}