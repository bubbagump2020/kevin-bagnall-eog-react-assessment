{"ast":null,"code":"var _jsxFileName = \"/home/kevin/Documents/kevin-bagnall-eog-react-assessment/src/Features/Graph/Graph.tsx\";\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Card, Typography, CardContent } from \"@material-ui/core\";\nimport ShowChartData from \"./ShowChartData\";\n\nvar getLastMeasurement = function getLastMeasurement(state) {\n  var lastMeasurement = state.metric.lastMeasurement;\n  return lastMeasurement;\n};\n\nvar Graph = function Graph() {\n  var lastMeasurement = useSelector(getLastMeasurement);\n\n  var renderChart = function renderChart() {\n    if (lastMeasurement.metric === \"\") {\n      return;\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, React.createElement(CardContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"h4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, \"\".concat(lastMeasurement.metric)), React.createElement(Typography, {\n        variant: \"h2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, \"\".concat(lastMeasurement.value, \" \").concat(lastMeasurement.unit))), React.createElement(ShowChartData, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      })));\n    }\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, renderChart());\n};\n\nexport default (function () {\n  return React.createElement(Graph, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  });\n});","map":{"version":3,"sources":["/home/kevin/Documents/kevin-bagnall-eog-react-assessment/src/Features/Graph/Graph.tsx"],"names":["React","useSelector","Card","Typography","CardContent","ShowChartData","getLastMeasurement","state","lastMeasurement","metric","Graph","renderChart","value","unit"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,SAASC,IAAT,EAAeC,UAAf,EAA2BC,WAA3B,QAA8C,mBAA9C;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;AAEA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,KAAD,EAAmB;AAC5C,MAAMC,eAAe,GAAGD,KAAK,CAACE,MAAN,CAAaD,eAArC;AACA,SAAOA,eAAP;AACD,CAHD;;AAKA,IAAME,KAAK,GAAG,SAARA,KAAQ,GAAM;AAClB,MAAMF,eAAe,GAAGP,WAAW,CAACK,kBAAD,CAAnC;;AAEA,MAAMK,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxB,QAAIH,eAAe,CAACC,MAAhB,KAA2B,EAA/B,EAAmC;AACjC;AACD,KAFD,MAEO;AACL,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,UAAD;AAAY,QAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACMD,eAAe,CAACC,MADtB,EADF,EAIE,oBAAC,UAAD;AAAY,QAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACMD,eAAe,CAACI,KADtB,cAC+BJ,eAAe,CAACK,IAD/C,EAJF,CADF,EASE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATF,CADF,CADF;AAeD;AACF,GApBD;;AAsBA,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMF,WAAW,EAAjB,CAAP;AACD,CA1BD;;AA4BA,gBAAe,YAAM;AACnB,SAAO,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD,CAFD","sourcesContent":["import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { IState } from \"../../store\";\nimport { Card, Typography, CardContent } from \"@material-ui/core\";\nimport ShowChartData from \"./ShowChartData\";\n\nconst getLastMeasurement = (state: IState) => {\n  const lastMeasurement = state.metric.lastMeasurement;\n  return lastMeasurement;\n};\n\nconst Graph = () => {\n  const lastMeasurement = useSelector(getLastMeasurement);\n\n  const renderChart = () => {\n    if (lastMeasurement.metric === \"\") {\n      return;\n    } else {\n      return (\n        <div>\n          <Card>\n            <CardContent>\n              <Typography variant=\"h4\">\n                {`${lastMeasurement.metric}`}\n              </Typography>\n              <Typography variant=\"h2\">\n                {`${lastMeasurement.value} ${lastMeasurement.unit}`}\n              </Typography>\n            </CardContent>\n            <ShowChartData />\n          </Card>\n        </div>\n      );\n    }\n  };\n\n  return <div>{renderChart()}</div>;\n};\n\nexport default () => {\n  return <Graph />;\n};\n"]},"metadata":{},"sourceType":"module"}